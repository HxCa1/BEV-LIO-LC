common:
    lid_topic: "/os_cloud_node/points"
    imu_topic: "/vn100/imu"
    
    time_sync_en: false            # ONLY turn on when external time synchronization is really not possible
    time_offset_lidar_to_imu: -0.1 # Time offset between lidar and IMU calibrated by other algorithms, e.g. LI-Init (can be found in README).
                                   # This param will take effect no matter what time_sync_en is. So if the time offset is not known exactly, please set as 0.0
    
preprocess:
    lidar_type: 3                # 1 for Livox serials LiDAR, 2 for Velodyne LiDAR, 3 for ouster LiDAR, 
    scan_line:  129
    timestamp_unit: 3            # 0-second, 1-milisecond, 2-microsecond, 3-nanosecond.
    blind: 0.5

mapping:
    # acc_cov: 0.1
    # gyr_cov: 0.1
    # b_acc_cov: 0.0001
    # b_gyr_cov: 0.0001
    # fov_degree: 180
    # det_range:  150.0
    acc_cov: 6.0e-2
    gyr_cov: 5.0e-3
    b_acc_cov: 8.0e-5
    b_gyr_cov: 3.0e-6
    fov_degree: 180
    det_range:  150.0
    extrinsic_est_en:  false      # true: enable the online estimation of IMU-LiDAR extrinsic
    
    extrinsic_T: [ -0.060649229060416594,
                   -0.012837544242408117,
                   -0.020492606896077407 ]
    extrinsic_R: [ 0.9999346552051229,      0.003477624535771754,  -0.010889970036688295,
                   0.003587143302461965,   -0.9999430279821171,     0.010053516443599904,
                  -0.010854387257665576,   -0.01009192338171122,   -0.999890161647627,  ]


publish:
    path_en:  true
    scan_publish_en:  true       # false: close all the point cloud output
    dense_publish_en: true       # false: low down the points number in a global-frame point clouds scan.
    scan_bodyframe_pub_en: true  # true: output the point cloud scans in IMU-body-frame

pcd_save:
    pcd_save_en: false
    interval: -1                 # how many LiDAR frames saved in each pcd file; 
                                 # -1 : all frames will be saved in ONE pcd file, may lead to memory crash when having too much frames.

bev:
    max_x_: 90
    min_x_: -90
    max_y_: 90
    min_y_: -90
    voxel_size : 0.4
    resolution : 0.4
    downsample : true
    normalize_to_255: true
image:
    brightness_filter: false
    dyn_scale: true
    blur: false
    # suppression_radius : 10
    ratio_thresh: 1
    matcher: "BF"
    match_mode: "ransac"
    ransac_threshold: 5
runtime_pos_log_enable: false
# change to your path
model_path: '/home/chx/bev-lio-lc/src/BEV_LIO/models/gpu.pt'

filter:
    bev_scale: 0.0005
    # ntu:0.0005
    # kth:0.0005(04,05,06,10) / 0.00001(01,09)
    # tuhh:0.0005(03,08) / 0.00001(02,04.07,09)
loop:
    bev:
        max_x_: 90
        min_x_: -90
        max_y_: 90
        min_y_: -90
        voxel_size : 0.4
        resolution : 0.4
        downsample : true
        normalize_to_255: true
    image:
        brightness_filter: false
        dyn_scale: true
        blur: false
        # suppression_radius : 10
        ratio_thresh: 1
        matcher: "BF"
        match_mode: "ransac"
        ransac_threshold: 5
    runtime_pos_log_enable: false
    # change to your path
    model_path: '/home/chx/bev-lio-lc/src/BEV_LIO/models/gpu.pt'

loop_with_ORB_: 1 # if use orb at backend to match frames.(REIN performs bad at backend matching)
loopClosureEnableFlag: false
historyKeyframeSearchRadius : 10
historyKeyframeSearchTimeDiff: 15


visualize_en_ : 1 # 白色背景
downsample_ratio_: 1
down_sample_matches_: 0
draw_keypoints_: 0